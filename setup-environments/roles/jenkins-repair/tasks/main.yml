---
- include_role:
    name: init

- name: define the project  
  set_fact: project="{{ product }}-cicd"

- name: switch to the project {{ project }}
  shell: "oc project {{ project }}"

- name: Read the jenkins pod list
  shell: "oc get pods --selector name=jenkins -o json -n {{ project }}"
  register: list_of_jenkins_pods
    
- name: Get the name of the Jenkins Pod
  set_fact: jenkins_pod="{{list_of_jenkins_pods.stdout|from_json|json_query('items[0].metadata.name')}}"       

- debug:
    var: jenkins_pod
    verbosity: 0

- name: Rename the config file
  shell: 'oc exec {{jenkins_pod}} -- /bin/sh -i -c "mv /var/lib/jenkins/.kube/config /var/lib/jenkins/.kube/config_bak_{{ansible_date_time.date}} || true"'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - jenkins    
    
- name: Restart the jenkins server
  shell : "oc rollout latest dc/jenkins -n {{ project }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Wait for the jenkins master server to become available
  shell: "oc rollout status dc/jenkins"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - jenkins  
    