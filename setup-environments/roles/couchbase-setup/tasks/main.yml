---
- name: Create the service account
  shell: 'oc create serviceaccount useroot -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Bind the service account to anyuid
  shell: 'oc adm policy add-scc-to-user anyuid -z useroot'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Install Couchbase
  shell: "oc new-app arungupta/couchbase -n {{ project }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
      - openshift
      - couchbase

- name: Patch the service account for the deployment config
  shell: 'oc patch dc/couchbase -p ''{"spec":{"template":{"spec":{"serviceAccountName": "useroot"}}}}'' -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift   

- name: Wait for the couchbase server to become available
  shell : "oc rollout status dc/couchbase  -n {{ project }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift      

- name: Expose Service couchbase
  shell: "oc expose service couchbase"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  when: params.expose is defined and params.expose
  tags:
    - openshift    

- name: Create the maxBucketCount on Couchbase Pod
  uri:
    url: http://couchbase.{{ project }}.svc/pools/default
    method: POST
    user: "{{ couchbase.user }}"
    password: "{{ couchbase.password }}"  
    body_format: form-urlencoded
    body:
      maxBucketCount: params.maxBucketCount
    force_basic_auth: yes
    status_code: 202    
  when: params.maxBucketCount is defined
    
- name: Create the memoryQuota on Couchbase Pod
  uri:
    url: http://couchbase.{{ project }}.svc/pools/default
    method: POST
    user: "{{ couchbase.user }}"
    password: "{{ couchbase.password }}"  
    body_format: form-urlencoded
    body:
      memoryQuota: params.memoryQuota
    force_basic_auth: yes
    status_code: 202   
  when: params.memoryQuota is defined   
  
- name: Create the memoryQuota on Couchbase Pod
  uri:
    url: http://couchbase.{{ project }}.svc/pools/default
    method: POST
    user: "{{ couchbase.user }}"
    password: "{{ couchbase.password }}"  
    body_format: form-urlencoded
    body:
      indexMemoryQuota: params.indexMemoryQuota
    force_basic_auth: yes
    status_code: 202   
  when: params.indexMemoryQuota is defined        