---
- name: Checkout {{ repo }} from github
  git:
    repo: "https://github.com/{{ github }}/{{ repo }}.git"
    dest: "{{ workdir }}/{{ repo }}"
    update: yes
  tags:
    - git  

- set_fact: branch="master"

- name: fetch latest tag for this repo
  shell: "git describe --abbrev=0 --tags"
  args:
    chdir: "{{ workdir }}/{{ repo }}"
  when: test
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - git  

- set_fact: branch="{{ command_result.stdout }}"
  when: test

- name: Create the microservice databases on PostgreSQL Pod
  shell: 'oc exec {{db_pod}} -- /bin/sh -i -c "createdb {{ microservice }}"'
  register: command_result
  when: db      
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql

- name: Copy ddl to PostgreSQL Pod
  shell: 'oc rsync --no-perms=true --include="*.ddl" --exclude="*" {{ workdir }}/{{ repo }}/ddl/ {{db_pod}}:/tmp'
  register: command_result
  when: db
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql

- name: Execute Drop ddl on PostgreSQL Pod
  shell: 'oc exec {{db_pod}} -- /bin/sh -i -c "psql -d {{ microservice }} -U postgres -f /tmp/drop-{{ microservice }}-db.ddl"'
  register: command_result
  when: db
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql

- name: Create the {{ microservice }} build config
  shell: 'oc process -n {{ project }} -f {{ workdir }}/{{ repo }}/openshift/templates/{{ microservice }}-build-config.yml -p NAMESPACE={{ project }} -p IMAGESTREAM_NAMESPACE={{ project }} -p GITHUB={{ github }} -p DOCKER_IMAGE_LABEL=latest -p PRODUCT={{ product }} -p MAVEN_MIRROR_URL={{ maven_mirror_url }} -p DOCKER_REGISTRY={{ docker_registry }} | oc apply -f -'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift         

- name: Start the {{ microservice }} build
  shell: 'oc start-build {{ microservice }} --wait -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Create the deployment config
  shell: 'oc process -n {{ project }} -f {{ workdir }}/{{ repo }}/openshift/templates/{{ microservice }}-config.yml -p NAMESPACE={{ project }} -p DOCKER_NAMESPACE={{ project }} -p DOCKER_IMAGE_LABEL=latest -p PRODUCT={{ product }} | oc apply -f -'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift     

- name: Start the {{ microservice }} deployment
  shell: 'oc deploy {{ microservice }} -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Wait for the microservice to become available ({{ microservice }})
  shell : "oc rollout status dc/{{ microservice }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Expose Service ({{ microservice }})
  shell: "oc expose service {{ microservice }}"
  when: expose
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift