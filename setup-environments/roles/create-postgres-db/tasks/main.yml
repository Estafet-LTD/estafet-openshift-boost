---

- debug:
    var: params
    verbosity: 0

- name: Read the database pod list
  shell: "oc get pods --selector app=postgresql -o json -n {{ project }}"
  register: list_of_db_pods
    
- name: Get the name of the PostgreSQL Pod
  set_fact: db_pod="{{list_of_db_pods.stdout|from_json|json_query('items[0].metadata.name')}}"
  
- debug:
   var: db_pod
   verbosity: 0    

- name: Create the {{ app }} database on PostgreSQL Pod
  shell: 'oc exec {{db_pod}} -n {{ project }} -- /bin/sh -i -c "createdb {{ project }}-{{ app }}"'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql

- name: Copy ddl to PostgreSQL Pod
  shell: 'oc rsync --no-perms=true --include="*.ddl" --exclude="*" {{ workdir }}/{{ repo }}/ddl/ {{db_pod}}:/tmp -n {{ project }}'
  register: command_result
  when: params.reset_db 
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql
    
- name: Copy liqubase ddl to PostgreSQL Pod
  shell: 'oc rsync --no-perms=true --include="*.ddl" --exclude="*" {{ boost_ddl }}/ {{db_pod}}:/tmp -n {{ project }}'
  register: command_result
  when: params.reset_db 
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql  

- name: Execute Drop ddl on PostgreSQL Pod
  shell: 'oc exec {{db_pod}} -n {{ project }} -- /bin/sh -i -c "psql -d {{ project }}-{{ app }} -U postgres -f /tmp/drop-{{ app }}-db.ddl"'
  register: command_result
  when: params.reset_db
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql
    
- name: Drop liquibase on PostgreSQL Pod
  shell: 'oc exec {{db_pod}} -n {{ project }} -- /bin/sh -i -c "psql -d {{ project }}-{{ app }} -U postgres -f /tmp/drop-liquibase-db.ddl"'
  register: command_result
  when: params.reset_db
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - postgresql    

