---
- set_fact:
    workdir: "{{ ansible_env.HOME }}/.boost"
    
- name: load product variables
  include_vars:
    dir: "{{ playbook_dir }}/../definitions"
    extensions: [yml]

- name: load the boost variables
  include_vars:
    dir: "{{ workdir }}/boostcd/src/boost/openshift/definitions"
    extensions: [yml]  

- name: merge the default boost repo value
  set_fact:
    boost: "{{boost|combine(boostcd,recursive=True)}}"
  when: boost.repo is undefined

- name: merge the default boost updates value
  set_fact:
    boost: "{{boost|combine(boost_updates,recursive=True)}}"
  when: boost.updates is undefined

- name: set the config and section
  set_fact:
    git_config: "{{ productdir }}/.git/config"
    git_config_section: '`remote "origin"`'

- name: define the default product repo value
  set_fact:
    product_default:
      repo: "{{ lookup('ini', 'url file=git_config') }}"

- debug:
    var: product_default
    verbosity: 0

- name: merge the default product repo value
  set_fact:
    product: "{{product|combine(product_default,recursive=True)}}"
  when: product.repo is undefined

- debug:
    var: product
    verbosity: 0

- name: merge the default maven repo into the environments
  set_fact:
    environments: "{{environments|combine(console_environment,recursive=True)}}"
  when: environments.maven_mirror_url is undefined

- name: merge the default maven repo into the developer environment
  set_fact:
    developer_environment: "{{developer_environment|combine(console_environment,recursive=True)}}"
  when: developer_environment.maven_mirror_url is undefined

- name: merge the default maven repo into the qa environment
  set_fact:
    qa_environment: "{{qa_environment|combine(console_environment,recursive=True)}}"
  when: qa_environment.maven_mirror_url is undefined

- set_fact: openshift_host_port="{{ openshift.host }}:{{ openshift.port }}"
  when: openshift.port is defined

- set_fact: openshift_host_port="{{ openshift.host }}"
  when: openshift.port is not defined
    
- name: Verify if openshift is set
  fail:
    msg: "[OpenShift host] is not defined. Please edit openshift.yml"
  when: openshift is undefined

- name: Verify if product variable is set
  fail:
    msg: "[Product] is not defined. Please edit product.yml"
  when: product is undefined

- name: Verify if the microservices have been defined
  fail:
    msg: "[Microservices Definitions] are not set. Please edit microservices.yml"
  when: microservices is undefined

- name: Verify if the environments have been defined
  fail:
    msg: "[Environments Definitions] are not set. Please edit environments.yml"
  when: environments is undefined

- name: Verify if the libraries have been defined
  fail:
    msg: "[Library Definitions] are not set. Please edit libraries.yml"
  when: libraries is undefined

- name: Verify if the users have been defined
  fail:
    msg: "[Users] are not set. Please edit users.yml"
  when: users is undefined

- name: Verify if the tasks manager has been defined
  fail:
    msg: "[Task Manager] are not set. Please edit project.yml"
  when: task_manager is undefined

- name: Verify if the tasks manager has been defined
  fail:
    msg: "[Task Manager Title] are not set. Please edit project.yml"
  when: task_manager is undefined

- name: Login in OpenShift as {{ openshift.username }}
  shell: "oc login --insecure-skip-tls-verify=true -u {{ openshift.username }} -p {{ openshift.password }} {{ openshift_host_port }}"
  tags:
    - openshift
