---

- name: Checking if database already exists
  uri:
    url: http://couchbase-{{ project }}.{{ openshift.subdomain }}/pools/default
  register: http_response

- name: Create the service account
  shell: 'oc create serviceaccount useroot -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Bind the service account to anyuid
  shell: 'oc adm policy add-scc-to-user anyuid -z useroot'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Install Couchbase
  shell: "oc new-app arungupta/couchbase -n {{ project }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
      - openshift
      - couchbase

- name: Expose Service couchbase
  shell: "oc expose service couchbase"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift    

- name: Patch the service account for the deployment config
  shell: 'oc patch dc/couchbase -p ''{"spec":{"template":{"spec":{"serviceAccountName": "useroot"}}}}'' -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift   

- name: Set the readiness probe
  shell: 'oc set probe dc/couchbase --readiness --get-url=http://:8091/ --initial-delay-seconds=2'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift   

- name: Wait for the couchbase server to become available
  shell : "oc rollout status dc/couchbase  -n {{ project }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift      

- set_fact:
    memoryQuota: "{{ params.memoryQuota }}"
  when: params.memoryQuota is defined

- set_fact:
    memoryQuota: 512
  when: params.memoryQuota is undefined

- name: Update the memoryQuota to {{ memoryQuota }}
  uri:
    url: http://couchbase-{{ project }}.{{ openshift.subdomain }}/pools/default
    method: POST
    user: Administrator
    password: password  
    body_format: form-urlencoded
    body:
      memoryQuota: "{{ memoryQuota }}"
    force_basic_auth: yes
    status_code: 200, 202   

- name: Update the credentials
  uri:
    url: http://couchbase-{{ project }}.{{ openshift.subdomain }}/settings/web
    method: POST
    user: Administrator
    password: password  
    body_format: form-urlencoded
    body:
      username: "{{ couchbase.user }}"  
      password: "{{ couchbase.password }}" 
      port: 8091
    force_basic_auth: yes
    status_code: 200, 202      

- name: Update the services
  uri:
    url: http://couchbase-{{ project }}.{{ openshift.subdomain }}/node/controller/setupServices
    method: POST
    user: "{{ couchbase.user }}"
    password: "{{ couchbase.password }}"  
    body_format: form-urlencoded
    body:
      services: kv,index,n1ql
    force_basic_auth: yes
    status_code: 200, 202          
  when: http_response.status != 200