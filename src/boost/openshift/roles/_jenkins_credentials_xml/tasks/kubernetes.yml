---
- name: Get count of service account nodes
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/downloads/credentials.xml"
    xpath: /com.cloudbees.plugins.credentials.SystemCredentialsProvider/domainCredentialsMap/entry/java.util.concurrent.CopyOnWriteArrayList/org.csanchez.jenkins.plugins.kubernetes.ServiceAccountCredential
    count: yes
  register: sa_credential

- set_fact:
    xml_node: /com.cloudbees.plugins.credentials.SystemCredentialsProvider/domainCredentialsMap/entry/java.util.concurrent.CopyOnWriteArrayList/org.csanchez.jenkins.plugins.kubernetes.ServiceAccountCredential
  when: sa_credential.count > 0

- name: Get count of file system service account nodes
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/downloads/credentials.xml"
    xpath: /com.cloudbees.plugins.credentials.SystemCredentialsProvider/domainCredentialsMap/entry/java.util.concurrent.CopyOnWriteArrayList/org.jenkinsci.plugins.kubernetes.credentials.FileSystemServiceAccountCredential
    count: yes
  register: file_sys_sa_credential

- set_fact:
    xml_node: /com.cloudbees.plugins.credentials.SystemCredentialsProvider/domainCredentialsMap/entry/java.util.concurrent.CopyOnWriteArrayList/org.jenkinsci.plugins.kubernetes.credentials.FileSystemServiceAccountCredential
  when: file_sys_sa_credential.count > 0  

# set the id
- name: Retrieve the credentials id
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/downloads/credentials.xml"
    xpath: "{{ xml_node }}/id"
    content: text
  register: credentials_id

- debug:
    var: credentials_id
    verbosity: 0

- name: Set the credentials id to the credentials template
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/files/credentials.xml"
    xpath: "{{ xml_node }}/id"
    value: "{{ credentials_id.matches[0].id }}"

# set the plugin
- name: Retrieve the credentials plugin
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/downloads/credentials.xml"
    xpath: "{{ xml_node }}/@plugin"
    content: attribute
  register: credentials_plugin

- debug:
    var: credentials_plugin
    verbosity: 0

- name: Add the plugin attribute
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/files/credentials.xml"
    xpath: "{{ xml_node }}"
    attribute: plugin
    value: "{{ credentials_plugin.matches[0].plugin }}"
  when: sa_credential.count > 0

- name: Add the plugin attribute
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/files/credentials.xml"
    xpath: "{{ xml_node }}"
    attribute: plugin
    value: "{{ credentials.matches[0].'org.jenkinsci.plugins.kubernetes.credentials.FileSystemServiceAccountCredential'.plugin }}"
  when: file_sys_sa_credential.count > 0

# set the scope
- name: Retrieve the credentials scope
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/downloads/credentials.xml"
    xpath: "{{ xml_node }}/scope"
    content: text
  register: credentials_scope

- debug:
    var: credentials_scope
    verbosity: 0

- name: Set the credentials scope to the credentials template
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/files/credentials.xml"
    xpath: "{{ xml_node }}/scope"
    value: "{{ credentials_scope.matches[0].scope }}"

# set the description    
- name: Retrieve the credentials description
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/downloads/credentials.xml"
    xpath: "{{ xml_node }}/description"
    content: text
  register: credentials_description

- debug:
    var: credentials_description
    verbosity: 0

- name: Set the credentials description to the credentials template
  xml:
    path: "{{ roles }}/_jenkins_credentials_xml/files/credentials.xml"
    xpath: "{{ xml_node }}/description"
    value: "{{ credentials_description.matches[0].description }}"