---
# create secrets
- name: Check that the {{ stage }}-secret.yml exists
  stat:
    path: "{{ workdir }}/{{ microservice.name }}/src/boost/openshift/configuration/{{ stage }}-secret.yml"
  register: stat_result

- name: initialise the secret
  set_fact:
    secret: ""

- name: define the secret file
  set_fact:
    secret: "{{ workdir }}/{{ microservice.name }}/src/boost/openshift/configuration/{{ stage }}-secret.yml"
  when: stat_result.stat.exists  

- name: Check that the default-secret.yml exists
  stat:
    path: "{{ workdir }}/{{ microservice.name }}/src/boost/openshift/configuration/default-secret.yml"
  register: stat_result

- name: define the default secret file
  set_fact:
    secret: "{{ workdir }}/{{ microservice.name }}/src/boost/openshift/configuration/default-secret.yml"
  when: stat_result.stat.exists and secret == ""

- name: Load the variables from {{ secret }}
  include_vars:
    file: "{{ secret }}"
  when: secret != ""

- name: Initialise secret variables
  set_fact: 
    secretStr: ""
  when: secret != ""

- name: format the secrets variables
  set_fact: 
    secretStr: "{{ secretStr }} --from-literal={{ item.name }}='{{ item.value }}'"
  with_items: "{{ secrets }}"
  when: secret != ""

- name: Create the {{ microservice.name }} secrets
  shell: 'oc create secret generic {{ microservice.name }} {{ secretStr }} -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  when: secret != ""
  tags:
    - openshift