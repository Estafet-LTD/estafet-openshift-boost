---
- name: print the microservice details
  debug:
    var: microservice
    verbosity: 0

- name: set the images variables
  set_fact:
    image_deployed: false
    image: "{{ dockerhub.url }}/{{ dockerhub.org }}/{{ microservice.name }}:{{ microservice.version }}"
    dc_image: ""

- name: print the image
  debug:
    var: image
    verbosity: 0

- name: Retrieve the deployment config descriptor
  shell: "oc get dc --selector app={{ microservice.name }} -o json -n {{ project }}"
  register: list_of_dcs

- name: print the list of deployment configs
  debug:
    var: list_of_dcs
    verbosity: 0

- name: Get the image used by the dc
  set_fact: 
    dc_image: "{{list_of_dcs.stdout|image}}"

- name: print the deployment config image
  debug:
    var: dc_image
    verbosity: 0

- name: determine is the image needs to be deployed
  set_fact:
    image_deployed: true
  when: image == dc_image

- name: initialise the check_config
  set_fact:
    check_config: "{{ lookup('vars', microservice.check, default='')}}"
  when: microservice.check is defined

- name: initialise ignore_deploy
  set_fact: 
    ignore_deploy: true

- name: define ignore_deploy
  set_fact: 
    ignore_deploy: false
  when: "microservice.check is undefined or (microservice.check is defined and check_config != '')"



  