---

- debug:
    var: jenkins_plugin
    verbosity: 0

- debug:
    var: jenkins_plugin_path
    verbosity: 0

- include_role: 
    name: _jenkins_prepare_plugin
  vars:
    plugin_path: "{{ jenkins_plugin_path }}"
    plugin: "{{ jenkins_plugin }}"

- name: switch to the project {{ project }}
  shell: "oc project {{ project }}"

- name: Read the jenkins pod list
  shell: "oc get pods --selector name=jenkins -o json -n {{ project }}"
  register: list_of_jenkins_pods
    
- name: Get the name of the Jenkins Pod
  set_fact: jenkins_pod="{{list_of_jenkins_pods.stdout|from_json|json_query('items[0].metadata.name')}}"       

- debug:
    var: jenkins_pod
    verbosity: 0

- name: Copy script approval to the jenkins Pod
  shell: 'oc rsync --no-perms=true --include="*" {{ jenkins_plugin_path }}/ {{jenkins_pod}}:/var/lib/jenkins/plugins/ -n {{ project }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift
    - jenkins  

- name: indicate restart for jenkins
  set_fact:
    restart_jenkins: true
