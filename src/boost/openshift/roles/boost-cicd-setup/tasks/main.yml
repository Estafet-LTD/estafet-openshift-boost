---
- include_role: 
    name: namespace-setup
  vars:
    project: "{{ boost_project }}"
    project_description: "Boost CI/CD"

- include_role: 
    name: jenkins-setup
  vars:
    project: "{{ boost_project }}"
    volume_capacity: 10Gi
    memory_limit: 2Gi

- include_role: 
    name: boost-libraries-setup
  vars:
    project: "{{ boost_project }}"
    
- name: Create build and release pipelines for each of the microservices
  shell: "oc process -f {{ templates }}/console-microservice-pipelines.yml -p MICROSERVICE_REPO_URI={{ microservice.repo }} -p BOOST_URL={{ boostcd.repo }} -p OPENSHIFT_HOST_PORT={{ openshift_host_port }} -p DOCKERHUB={{ dockerhub.org }} -p MICROSERVICE_NAME={{ item.name }} -p PRODUCT_REPO={{ product.repo }} -p BUILD_PIPELINE={{ item.build }} -p RELEASE_PIPELINE={{ item.release }} | oc create -f -"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"  
  with_items: "{{ boost_microservices }}"
  tags:
    - openshift      

- name: Create release pipeline for the boost framework
  shell: "oc process -f {{ templates }}/boost-release-pipeline.yml -p BOOST_URL={{ boostcd.repo }} | oc create -f -"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"  
  tags:
    - openshift 

- name: Create publish image pipeline
  shell: "oc process -f {{ templates }}/publish-image-pipeline.yml -p BOOST_URL={{ boostcd.repo }} -p OPENSHIFT_HOST_PORT={{ openshift_host_port }} -p DOCKERHUB={{ dockerhub.org }} | oc create -f -"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"  
  tags:
    - openshift    

- include_role: 
    name: jenkins-script-approval
  vars:
    project: "{{ boost_project }}"

- include_role: 
    name: jenkins-ansible-slave-setup    

- include_role: 
    name: jenkins-image-mgmt-slave-setup    