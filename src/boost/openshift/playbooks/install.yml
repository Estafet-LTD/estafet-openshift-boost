---
- name: Preparing the ansible roles for openshift boost 
  hosts: local   
  tasks:

    - name: load the variables
      include_vars:
        dir: ../definitions
        extensions: [yml]  
   
    - set_fact: 
        workdir: "{{ ansible_env.HOME }}/.boost"

    - name: Create Workdir
      file:
        path: "{{ workdir }}"
        state: directory

    - name: Recursively remove tmp directory
      file:
        path: "{{ workdir }}/tmp"
        state: absent

    - name: Recursively remove boost directory
      file:
        path: "{{ workdir }}/boostcd"
        state: absent

    - name: Download boost archive
      get_url:
        url: "https://github.com/boostcd/boostcd/archive/{{ boost.version }}.zip"
        dest: "{{ workdir }}/tmp"
      
    - name: Unarchive the boost archive
      unarchive:
        src: "{{ workdir }}/tmp/{{ boost.version }}.zip"
        dest: "{{ workdir }}"

    - name: rename archive directory
      shell: "mv {{ workdir }}/boostcd-{{ boost.version }} {{ workdir }}/boostcd"
        
    - name: Updating boost playbooks and inventory
      synchronize:
        src: "{{ workdir }}/boostcd/src/boost/openshift/playbooks"
        dest: "{{ playbook_dir }}/.."
        recursive: yes
        delete: yes

    - name: Updating boost system roles
      synchronize:
        src: "{{ workdir }}/boostcd/src/boost/openshift/roles"
        dest: "~/.ansible"    
        recursive: yes
        delete: yes

    - name: Updating boost extensions
      synchronize:
        src: "{{ workdir }}/boostcd/src/boost/openshift/actions/"
        dest: "~/.ansible/roles/"    
        recursive: yes
        delete: no        

    - name: Check that the product extensions exist
      stat:
        path: "{{ playbook_dir }}/../actions"
      register: product_roles

    - name: Updating product extensions
      synchronize:
        src: "{{ playbook_dir }}/../actions/"
        dest: "~/.ansible/roles"
        recursive: yes
        delete: no
      when: product_roles.stat.exists and product_roles.stat.isdir

    - debug:
        var: boost
        verbosity: 0
