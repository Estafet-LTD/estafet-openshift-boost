apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: microservice-pipelines
parameters:
- description: Defines name of the microservice
  name: MICROSERVICE_NAME
  required: true
- description: Defines the git repository uri within which the microservice resides
  name: MICROSERVICE_REPO_URI
  required: true    
- description: Defines the product that this pipeline is related to
  name: PRODUCT
  required: true   
- description: Defines boost version
  name: VERSION
  required: true   
- description: Defines test pipeline
  name: TEST_PIPELINE
  required: true   
- description: Defines the main repository that contains the infrastructor definition
  name: ENVIRONMENTS_REPO_URI
  required: true     
- description: Defines the last namespace before production
  name: PREPROD_PROJECT
  required: true
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: pipeline
      name: "build-${MICROSERVICE_NAME}"
      type: build
      product: ${PRODUCT}
    name: "build-${MICROSERVICE_NAME}"
  spec:
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: "https://github.com/boostcd/boostcd"
        ref: ${VERSION}
    strategy:
      jenkinsPipelineStrategy:
        env:
          - name: PRODUCT
            value: ${PRODUCT}
          - name: PRODUCT_REPO
            value: ${ENVIRONMENTS_REPO_URI}
          - name: REPO
            value: ${MICROSERVICE_REPO_URI}
          - name: MICROSERVICE
            value: ${MICROSERVICE_NAME}                                 
        jenkinsfilePath: "src/boost/openshift/pipelines/build.jenkinsFile"
      type: JenkinsPipeline
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: pipeline
      name: "test-${MICROSERVICE_NAME}"
      type: test
      product: ${PRODUCT}
    name: "test-${MICROSERVICE_NAME}"
  spec:
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${ENVIRONMENTS_REPO_URI}
    strategy:
      jenkinsPipelineStrategy:
        env:
          - name: PRODUCT
            value: ${PRODUCT}
          - name: REPO
            value: ${MICROSERVICE_REPO_URI}
          - name: MICROSERVICE
            value: ${MICROSERVICE_NAME}                                 
        jenkinsfilePath: "src/boost/openshift/pipelines/${TEST_PIPELINE}"
      type: JenkinsPipeline
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: pipeline
      name: "release-${MICROSERVICE_NAME}"
      type: release
      product: ${PRODUCT}
    name: "release-${MICROSERVICE_NAME}"
  spec:
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/boostcd/boostcd
        ref: ${VERSION}
    strategy:
      jenkinsPipelineStrategy:
        env:     
          - name: PRODUCT
            value: ${PRODUCT}  
          - name: PRODUCT_REPO
            value: ${ENVIRONMENTS_REPO_URI}               
          - name: REPO
            value: ${MICROSERVICE_REPO_URI}
          - name: MICROSERVICE
            value: ${MICROSERVICE_NAME}                              
        jenkinsfilePath: "src/boost/openshift/pipelines/release.jenkinsFile"
      type: JenkinsPipeline
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: pipeline
      name: "promote-to-prod-${MICROSERVICE_NAME}"
      type: promote-to-prod
      product: ${PRODUCT}
    name: "promote-to-prod-${MICROSERVICE_NAME}"
  spec:
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/boostcd/boostcd
        ref: ${VERSION}
    strategy:
      jenkinsPipelineStrategy:
        env:    
          - name: PRODUCT
            value: ${PRODUCT}  
          - name: PRODUCT_REPO
            value: ${ENVIRONMENTS_REPO_URI}                         
          - name: REPO
            value: ${MICROSERVICE_REPO_URI}
          - name: MICROSERVICE
            value: ${MICROSERVICE_NAME}
          - name: PROJECT
            value: ${PREPROD_PROJECT}                         
        jenkinsfilePath: "src/boost/openshift/pipelines/promote-to-prod.jenkinsFile"
      type: JenkinsPipeline
  status:
    lastVersion: 0    